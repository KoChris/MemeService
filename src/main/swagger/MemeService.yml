openapi: 3.0.1
info:
  title: Meme Service
  description: >-
    Hello fellow kids.  Use this API to download details of memes from the
    Reddit Meme Economy and solve puzzles
  version: 0.0.0

servers:
  - url: 'https://memeservice.cfapps.io/api'
  
tags:
  - name: Memes
    description: Download some may-mays
  - name: Challenges
    description: Submit your answers to the puzzles

paths:

  /memes:
    get:
      tags:
        - Memes
      summary: Retrieve all memes
      responses:
        '200':
          description: Successful operation
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meme'
  
  /challenges/filter:
    post:
      tags:
        - Challenges
      summary: Filter the memes to return all memes with a score of 60,000 or higher
      operationId: answerFirstChallenge
      parameters:
        - name: studentName
          in: header
          required: true
          description: The student's name
          schema:
            type: string
        - name: studentEmail
          in: header
          required: true
          description: The student's email so they can be contacted
          schema:
            type: string
      requestBody:
        description: Answer to the question
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Meme'
        required: true
      responses:
        '200':
          description: 'Answer accepted, correct'
          content: {}
        '400':
          description: Bad request
          content: {}
  /challenges/sum:
    post:
      tags:
        - Challenges
      summary: The sum of the scores of all memes ever
      operationId: answerSecondChallenge
      parameters:
        - name: studentName
          in: header
          required: true
          description: The student's name
          schema:
            type: string
        - name: studentEmail
          in: header
          required: true
          description: The student's email so they can be contacted
          schema:
            type: string
      requestBody:
        description: Answer to the question
        content:
          text/plain:
            schema:
              type: number
              example: 99
        required: true
      responses:
        '200':
          description: 'Answer accepted, correct'
          content: {}
        '400':
          description: Bad request
          content: {}

  /challenges/min:
    post:
      tags:
        - Challenges
      summary: Minimum score you must reach to get to Meme Economy Top Posts of All Time
      operationId: answerThirdChallenge
      parameters:
        - name: studentName
          in: header
          required: true
          description: The student's name
          schema:
            type: string
        - name: studentEmail
          in: header
          required: true
          description: The student's email so they can be contacted
          schema:
            type: string
      requestBody:
        description: Answer to the question
        content:
          text/plain:
            schema:
              type: integer
              example: 99
        required: true
      responses:
        '200':
          description: 'Answer accepted, correct'
          content: 
            text/plain:
              schema:
                type: string
              
        '400':
          description: Bad request
          content: {}

components:
  schemas:
    Meme:
      type: object
      example: 
        id: 1
        title: Hello There
        author: Obi-wan Kenobi
        link: 'https://www.youtube.com/watch?v=rEq1Z0bjdwc'
        points: 9001
      properties:
        id:
          type: string
          description: Unique identifier of the meme
          example: '1'
        title:
          type: string
          description: Title of the post on Reddit
          example: Hello There
        author:
          type: string
          description: Redditor who posted the meme
          example: Obi-wan Kenobi
        link:
          type: string
          description: Reddit link to the meme
          example: 'https://www.youtube.com/watch?v=rEq1Z0bjdwc'
        points:
          type: integer
          description: >-
            Karma the post recieved by the time it was imported into the
            database
          example: 9001